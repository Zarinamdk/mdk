using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace MDK.Lab7
{
    public class Lab7 : ILabs
    {
        /// <summary>
        /// Метод демонстрации всех заданий лабораторной работы
        /// </summary>
        public void Demo()
        {
            // ход лабы

            //ПКС20
            Group PKS = new Group();
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));
            PKS.Add(new Student("Василиса","Курьянова", 25, "женский", "ПКС20", "ВКУиНТ", "Программирование в компьютерных системах"));


            //ОДЛ20
            Group ODL = new Group();
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));
            ODL.Add(new Student("Василиса", "Курьянова", 25, "женский", "ОДЛ20", "ВКУиНТ", "Операционная деятельность в логистике"));


            //ГД20
            Group GD = new Group();
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));
            GD.Add(new Student("Василиса", "Курьянова", 25, "женский", "ГД20", "ВКУиНТ", "Гостиничное дело"));


            //АДТ20
            Group ADT = new Group();
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));
            ADT.Add(new Student("Василиса", "Курьянова", 25, "женский", "АДТ20", "ВКУиНТ", "Адитивные технологии"));


            //БД20
            Group BD = new Group();
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));
            BD.Add(new Student("Василиса", "Курьянова", 25, "женский", "БД20", "ВКУиНТ", "Банковское дело"));

            //Вывод
            Console.WriteLine();
            Console.WriteLine("Группа ПКС20");
            PKS.PrintGroup();
            Console.WriteLine();
            Console.WriteLine("Группа ОДЛ20");
            ODL.PrintGroup();
            Console.WriteLine();
            Console.WriteLine("Группа ГД20");
            GD.PrintGroup();
            Console.WriteLine();
            Console.WriteLine("Группа АДТ20");
            ADT.PrintGroup();
            Console.WriteLine();
            Console.WriteLine("Группа БД20");
            BD.PrintGroup();

            Console.WriteLine();

            var jsonFormatter = new DataContractSerializer (typeof(Student));
            using (var file = new FileStream("students.json", FileMode.OpenOrCreate))
            {
                jsonFormatter.WriteObject(file, Student);
            }
            using (var file= new FileStream("students.json", FileMode.OpenOrCreate))
            {
                jsonFormatter.ReadObject(file) as List<Student>;
                if (new Students != null)
                {
                    foreach (var student in new Students)
                    {
                        Console.WriteLine(student);
                    }
                }
            }
        }

        /// <summary>
        /// Метод возвращает описание заданий лабораторной работы
        /// </summary>
        /// <returns></returns>
        /// <returns>Описание лабы</returns>
        public string Description()
        {
            return "Задания лабы №7";
        }

        /// <summary>
        /// Метод возвращает номер лабораторной работы
        /// </summary>
        /// <returns>Номер лабы</returns>
        public int Id()
        {
            return 7;
        }

        /// <summary>
        /// Метод возвращает заголовок лабораторной работы
        /// </summary>
        /// <returns></returns>
        public string Title()
        {
            return "Лабораторная №7. Тема: Сериализация";
        }

    }
}
